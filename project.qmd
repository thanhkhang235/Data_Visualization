---
title: "My project"
author: "Khang Nguyen Thanh"
date: "2023-11-06"
output: html_document
---

```{r}
library(tidyverse)
library(ggplot2)
library(conflicted)
library(forcats)
library(scales)
library(plotly)
library(leaflet)
library(maps)
```

## Data

```{r}
df1 <- read.csv("data/incidents.csv")
df1 
```

```{r}
df2 <- read.csv("data/state.csv")
df2
```

```{r}
data <- left_join(df1,
          df2, 
          join_by( State == state_code)) 
data

```

```{r}
count(data,Smoke.alarms, sort= TRUE)
count(data,Cause, sort= TRUE)
count(data,Residential.building.type, sort = TRUE)
count(data,MFI, sort = TRUE)
```

## Basic Plots

```{r}
# Plotting Cause
data |> 
  group_by(Cause) |>
  filter(n() > 120) |> 
  ggplot(aes(y = fct_rev(fct_infreq(Cause)),fill=Cause)) +
  guides(fill = FALSE) +  # remove legend for fill 
  geom_bar() +
  geom_text(stat="count",aes(label = scales::comma(after_stat(count))), vjust = -0.5,size = 3) +
  labs(title = "Type of Cause of Fire",
       x = "Count",
       y = "Causes") +
  theme_classic() 
```

```{r}
# Fire by general property type 
data |> 
  group_by(Residential.building.type) |>
  ggplot(aes(y = fct_rev(fct_infreq(Residential.building.type)),fill=Residential.building.type)) +
  guides(fill = FALSE) +  # remove legend for fill 
  geom_bar() +
  geom_text(stat="count",aes(label = scales::comma(after_stat(count))), vjust = -0.5,size = 3) +
  labs(title = "Type of resident",
       x = "Count",
       y = "Type") +
  theme_classic() 
```

```{r}

fire_data <- data |>
  mutate(Incident_Date = as.Date(Date, format = "%m/%d/%Y")) |>
  mutate(Incident_Year = lubridate::year(Incident_Date)) |>
  filter(!is.na(Incident_Year)) |>
  filter(Cause != "Under investigation" & Cause != "Undetermined") |>
  group_by(Incident_Year, Cause) |>
  count(Cause)

causes_time <- ggplot(fire_data, aes(x = Incident_Year, y = n, fill = Cause)) +
  geom_col(position = "stack") +
  labs(x = "Year of Incident", y = "Count", title = "Causes of Fire Incidents Since 2012") +
  theme_minimal() +
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        panel.background = element_blank())
causes_time

# find a way to adjust the color => read the book 
# or find a different type of map to show it ???
```

```{r}
# Look at the top 5 specifically 
# Extract top 5 causes
top_causes <- fire_data %>%
  group_by(Cause) %>%
  summarise(total_count = sum(n)) %>%
  top_n(5, total_count) %>%
  pull(Cause)

# Filter data for top 5 causes
filtered_data <- fire_data %>%
  filter(Cause %in% top_causes)

# Plotting the change in top 5 causes over years
 ggplot(filtered_data, aes(x = Incident_Year, y = n, color = Cause)) +
  geom_line() +
  labs(x = "Year of Incident", y = "Count", title = "Top 5 Causes of Fire Incidents Over the Years") +
  theme_minimal() +
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        panel.background = element_blank())
```

```{r}
# Age vs Cause: top 5 only 

fire_data_filtered <- data |>
  filter(Cause != "Under investigation" & Cause != "Undetermined") |>
  group_by(Cause) |>
  summarise(Count = n()) |>
  top_n(5, Count) |>
  pull(Cause)

# Filter data for only the top 5 causes
top_causes <- data |>
  filter(Cause %in% fire_data_filtered)

# Plotting Age Demographic vs. Cause for top 5 causes
ggplot(top_causes, aes(x = Age.demographic, fill = Cause)) +
  geom_bar(position = "dodge") +
  labs(title = "Relationship between Age Demographic and Top 5 Causes of Incidents",
       x = "Age Demographic",
       y = "Count") +
  theme_minimal() # heatmap instead
```

```{r}
state_counts <- data |>
  count(state) |>
  rename(region = state, incident_count = n)
state_counts
```

```{r}
# Aggregate incident counts per state
state_counts <- data |>
  count(State = tools::toTitleCase(state)) |>
  rename(region = State, incident_count = n)

# Get the US state map data
us_map <- map_data("state")

# Harmonize state names in the map data
us_map$region <- tools::toTitleCase(us_map$region)

# Merge the incident counts with map data
merged_data <- us_map |>
  left_join(state_counts, by = c("region" = "region"))
```

```{r}

# Plotting the map with incident counts
ggplot() +
  geom_map(data = merged_data, map = merged_data,
           aes(map_id = region, fill = incident_count),
           color = "black") +
  expand_limits(x = merged_data$long, y = merged_data$lat) +
  scale_fill_gradient(low = "lightblue", high = "red", na.value = "grey50",
                      name = "Incident Count", guide = "colorbar") +
  labs(title = "Home Fire Incidents Across US States") +
  theme_minimal() +
  theme(legend.position = "bottom")

# why one state has more incidents than others => population + type of resident 
# => investigate that to go further => answer this question 

```

```{r}
# Calculate counts per state
state_counts <- data |>
  count(state) |>
  arrange(desc(n))  # Sort in descending order by count

# Sort the original data frame by state counts
fire_data_sorted <- data |>
  mutate(state = factor(state, levels = state_counts$state))  

# Create an interactive bar chart for state-wise incidents sorted by count
plot_ly(data = fire_data_sorted, x = ~state) |>
  add_trace(type = 'histogram', marker = list(color = ~state)) |>
  layout(title = "State-wise Home Fire Incidents (Sorted by Count)")

```
